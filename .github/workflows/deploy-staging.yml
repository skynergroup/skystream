name: üß™ Staging Deploy

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 8 # Fail fast
    environment:
      name: staging
      url: https://staging.bumblebeefoundation.co.za
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install & Build
      run: |
        npm ci --prefer-offline --no-audit
        cp .env.production .env.local
        echo "VITE_APP_NAME=SkyStream Staging" >> .env.local
        npm run build:production
      env:
        NODE_ENV: production

    - name: Verify Build
      run: |
        [ -d "dist" ] && [ "$(ls -A dist)" ] || { echo "‚ùå Build failed"; exit 1; }
        echo "‚úÖ Staging build ready ($(du -sh dist | cut -f1))"

    - name: Deploy to Staging
      if: ${{ secrets.STAGING_FTP_HOST }}
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.STAGING_FTP_HOST }}
        username: ${{ secrets.STAGING_FTP_USERNAME }}
        password: ${{ secrets.STAGING_FTP_PASSWORD }}
        local-dir: ./dist/
        server-dir: ${{ secrets.STAGING_FTP_PATH }}
        exclude: |
          **/.git*
          **/node_modules/**

    - name: Status
      run: |
        if [[ -n "${{ secrets.STAGING_FTP_HOST }}" ]]; then
          echo "üß™ Deployed to staging"
        else
          echo "‚ö†Ô∏è Staging FTP secrets not configured - deployment skipped"
          echo "Add STAGING_FTP_HOST, STAGING_FTP_USERNAME, STAGING_FTP_PASSWORD, STAGING_FTP_PATH secrets"
        fi
